-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2020-06-30 12:46:46 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE adresa (
    id_adresy          INTEGER NOT NULL,
    ulice              VARCHAR2(1000 CHAR) NOT NULL,
    cislo_popisne      INTEGER NOT NULL,
    psc                VARCHAR2(50 CHAR),
    mesto              VARCHAR2(100 CHAR) NOT NULL,
    stat               VARCHAR2(100 CHAR) NOT NULL,
    orientacni_cislo   INTEGER
);

ALTER TABLE adresa ADD CONSTRAINT pk_adresa PRIMARY KEY ( id_adresy );

CREATE TABLE clen (
    clen_od       DATE DEFAULT sysdate NOT NULL,
    clen_do       DATE,
    zamestnanec   INTEGER NOT NULL,
    tym           INTEGER NOT NULL
);

ALTER TABLE clen
    ADD CONSTRAINT pk_clen PRIMARY KEY ( zamestnanec,
                                         clen_od,
                                         tym );

CREATE TABLE maloobchod (
    id_zakaznik         INTEGER NOT NULL,
    mal_obch_vek        INTEGER,
    mal_obch_pohlavi    VARCHAR2(10 CHAR),
    mal_obch_prijmeni   VARCHAR2(100 CHAR),
    mal_obch_titul      VARCHAR2(30 CHAR)
);

ALTER TABLE maloobchod ADD CONSTRAINT pk_mal_obch PRIMARY KEY ( id_zakaznik );

CREATE TABLE material (
    id_materialu      INTEGER NOT NULL,
    mnozstvi          NUMBER NOT NULL,
    popis             VARCHAR2(1000 CHAR),
    sklad_materialu   INTEGER NOT NULL,
    jmeno_materialu   VARCHAR2(300 CHAR) NOT NULL,
    skladem           INTEGER NOT NULL,
    porizovaci_cena   NUMBER NOT NULL
);

ALTER TABLE material ADD CONSTRAINT pk_material PRIMARY KEY ( sklad_materialu,
                                                              id_materialu );

ALTER TABLE material ADD CONSTRAINT ux_material_jmeno_materialu UNIQUE ( jmeno_materialu );

CREATE TABLE nabidka_sluzby (
    id_nabidky   INTEGER NOT NULL,
    typ_sluzby   VARCHAR2(100 CHAR) NOT NULL,
    datum_od     DATE NOT NULL,
    datum_do     DATE,
    zakazka      INTEGER NOT NULL
);

ALTER TABLE nabidka_sluzby
    ADD CONSTRAINT sluzby_arc_lov CHECK ( typ_sluzby IN (
        'REALIZACE',
        'UDRZBA'
    ) );

ALTER TABLE nabidka_sluzby ADD CONSTRAINT pk_nab_sl PRIMARY KEY ( id_nabidky );

CREATE TABLE objednavka (
    zakaznik         INTEGER NOT NULL,
    datum_prijeti    DATE DEFAULT sysdate NOT NULL,
    datum_vyrizeni   DATE NOT NULL,
    zakazka          INTEGER NOT NULL
);

ALTER TABLE objednavka ADD CONSTRAINT pk_obj PRIMARY KEY ( zakaznik,
                                                           zakazka );

CREATE TABLE obsahuje (
    mnozstvi         INTEGER NOT NULL,
    cena             NUMBER NOT NULL,
    zakazka          INTEGER NOT NULL,
    material_sklad   INTEGER NOT NULL,
    material         INTEGER NOT NULL
);

ALTER TABLE obsahuje
    ADD CONSTRAINT pk_obsahujev2 PRIMARY KEY ( zakazka,
                                               material_sklad,
                                               material );

ALTER TABLE obsahuje
    ADD CONSTRAINT pk_obsahuje UNIQUE ( material_sklad,
                                        material,
                                        zakazka );

CREATE TABLE pouzita_technika (
    seznam_techniky   INTEGER NOT NULL,
    sklad_techniky    INTEGER NOT NULL,
    zakazka           INTEGER NOT NULL,
    datum_od          DATE NOT NULL,
    datum_do          DATE
);

ALTER TABLE pouzita_technika
    ADD CONSTRAINT pk_pouzita_technika PRIMARY KEY ( zakazka,
                                                     seznam_techniky,
                                                     sklad_techniky,
                                                     datum_od );

CREATE TABLE realizace (
    nabidka_sluzby   INTEGER NOT NULL,
    plocha           VARCHAR2(100) NOT NULL,
    naceneni         NUMBER(38, 2) NOT NULL,
    cas              DATE
);

ALTER TABLE realizace ADD CONSTRAINT pk_realizace PRIMARY KEY ( nabidka_sluzby );

CREATE TABLE seznam_techniky (
    id_seznamu_techniky   INTEGER NOT NULL,
    poznamka              VARCHAR2(4000 CHAR),
    sklad_techniky        INTEGER NOT NULL,
    jmeno_techniky        VARCHAR2(500 CHAR) NOT NULL
);

ALTER TABLE seznam_techniky ADD CONSTRAINT pk_sez_tech PRIMARY KEY ( id_seznamu_techniky,
                                                                     sklad_techniky );

CREATE TABLE seznam_tymu (
    id_seznamu_tymu   INTEGER NOT NULL,
    datum_od          DATE NOT NULL,
    datum_do          DATE,
    tym               INTEGER NOT NULL,
    zakazka           INTEGER NOT NULL
);

ALTER TABLE seznam_tymu
    ADD CONSTRAINT pk_seznam_tymu PRIMARY KEY ( id_seznamu_tymu,
                                                tym,
                                                zakazka );

CREATE TABLE sidlo (
    id_sidla    INTEGER NOT NULL,
    jmeno       VARCHAR2(100 CHAR) NOT NULL,
    adresa      INTEGER NOT NULL,
    plocha      NUMBER,
    typ_sidla   VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE sidlo ADD CONSTRAINT pk_sidlo PRIMARY KEY ( id_sidla );

ALTER TABLE sidlo ADD CONSTRAINT ux_sidlo_jmeno UNIQUE ( jmeno );

CREATE TABLE sklad_materialu (
    id_skladu_materialu   INTEGER NOT NULL,
    nazev_skladu          VARCHAR2(500 CHAR) NOT NULL,
    popis                 VARCHAR2(4000 CHAR),
    sidlo                 INTEGER NOT NULL
);

ALTER TABLE sklad_materialu ADD CONSTRAINT pk_skl_mat PRIMARY KEY ( id_skladu_materialu );

ALTER TABLE sklad_materialu ADD CONSTRAINT ux_skl_mat_nazev_skladu UNIQUE ( nazev_skladu );

CREATE TABLE sklad_techniky (
    id_skladu_techniky   INTEGER NOT NULL,
    nazev_skladu         VARCHAR2(500 CHAR) NOT NULL,
    popis                VARCHAR2(4000 CHAR),
    sidlo                INTEGER NOT NULL
);

ALTER TABLE sklad_techniky ADD CONSTRAINT pk_skl_tech PRIMARY KEY ( id_skladu_techniky );

ALTER TABLE sklad_techniky ADD CONSTRAINT ux_skl_tech_nazev_skladu UNIQUE ( nazev_skladu );

CREATE TABLE tym (
    id_tymu   INTEGER NOT NULL,
    nazev     VARCHAR2(100) NOT NULL,
    popis     VARCHAR2(4000 CHAR)
);

ALTER TABLE tym ADD CONSTRAINT pk_tym PRIMARY KEY ( id_tymu );

ALTER TABLE tym ADD CONSTRAINT ux_tym_nazev UNIQUE ( nazev );

CREATE TABLE typ_sidla (
    id_nazev_typu   VARCHAR2(50 CHAR) NOT NULL,
    popis           VARCHAR2(1000 CHAR)
);

ALTER TABLE typ_sidla ADD CONSTRAINT pk_typ_sidla PRIMARY KEY ( id_nazev_typu );

CREATE TABLE typ_sluzby (
    id_typ_sluzby   VARCHAR2(100 CHAR) NOT NULL,
    popis           VARCHAR2(500 CHAR) NOT NULL
);

ALTER TABLE typ_sluzby ADD CONSTRAINT pk_typ_sluzby PRIMARY KEY ( id_typ_sluzby );

CREATE TABLE udrzba (
    nabidka_sluzby   INTEGER NOT NULL,
    cas              DATE NOT NULL,
    naceneni         NUMBER(38, 2) NOT NULL
);

ALTER TABLE udrzba ADD CONSTRAINT pk_udrzba PRIMARY KEY ( nabidka_sluzby );

CREATE TABLE velkoobchod (
    id_zakaznik    INTEGER NOT NULL,
    vel_obch_ico   VARCHAR2(10 CHAR) NOT NULL,
    vel_obch_dic   VARCHAR2(15 CHAR),
    adresa         INTEGER NOT NULL
);

ALTER TABLE velkoobchod ADD CONSTRAINT pk_vel_obch PRIMARY KEY ( id_zakaznik );

ALTER TABLE velkoobchod ADD CONSTRAINT pk_vel_obchv1 UNIQUE ( vel_obch_ico );

ALTER TABLE velkoobchod ADD CONSTRAINT ux_vel_obch_vel_obch_dic UNIQUE ( vel_obch_dic );

CREATE TABLE zakazka (
    id_zakazky     INTEGER NOT NULL,
    celkova_cena   NUMBER(38, 2) NOT NULL,
    poznamky       VARCHAR2(500)
);

ALTER TABLE zakazka ADD CONSTRAINT pk_zakazka PRIMARY KEY ( id_zakazky );

CREATE TABLE zakaznik (
    id_zakaznik     INTEGER NOT NULL,
    telefon         VARCHAR2(100 CHAR) NOT NULL,
    adresa          INTEGER,
    jmeno           VARCHAR2(100 CHAR) NOT NULL,
    email           VARCHAR2(400 CHAR) NOT NULL,
    zakaznik_type   VARCHAR2(8) NOT NULL
);

ALTER TABLE zakaznik
    ADD CONSTRAINT ch_inh_zakaznik CHECK ( zakaznik_type IN (
        'MAL_OBCH',
        'VEL_OBCH'
    ) );

ALTER TABLE zakaznik ADD CONSTRAINT pk_zakaznik PRIMARY KEY ( id_zakaznik );

ALTER TABLE zakaznik ADD CONSTRAINT ux_zakaznik_telefon UNIQUE ( telefon );

CREATE TABLE zamestnanec (
    id_zamestnanec   INTEGER NOT NULL,
    osobni_cislo     VARCHAR2(10 CHAR) NOT NULL,
    jmeno            VARCHAR2(100 CHAR) NOT NULL,
    sidlo            INTEGER NOT NULL
);

ALTER TABLE zamestnanec ADD CONSTRAINT pk_zamest PRIMARY KEY ( id_zamestnanec );

ALTER TABLE zamestnanec ADD CONSTRAINT ux_zamest_osobni_cislo UNIQUE ( osobni_cislo );

ALTER TABLE clen
    ADD CONSTRAINT fk_clen_tym FOREIGN KEY ( tym )
        REFERENCES tym ( id_tymu );

ALTER TABLE clen
    ADD CONSTRAINT fk_clen_zamest FOREIGN KEY ( zamestnanec )
        REFERENCES zamestnanec ( id_zamestnanec );

ALTER TABLE maloobchod
    ADD CONSTRAINT fk_mal_obch_zakaznik FOREIGN KEY ( id_zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE material
    ADD CONSTRAINT fk_material_skl_mat FOREIGN KEY ( sklad_materialu )
        REFERENCES sklad_materialu ( id_skladu_materialu );

ALTER TABLE nabidka_sluzby
    ADD CONSTRAINT fk_nab_sl_typ_sluzby FOREIGN KEY ( typ_sluzby )
        REFERENCES typ_sluzby ( id_typ_sluzby );

ALTER TABLE nabidka_sluzby
    ADD CONSTRAINT fk_nab_sl_zakazka FOREIGN KEY ( zakazka )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE objednavka
    ADD CONSTRAINT fk_obj_zakazka FOREIGN KEY ( zakazka )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE objednavka
    ADD CONSTRAINT fk_obj_zakaznik FOREIGN KEY ( zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE obsahuje
    ADD CONSTRAINT fk_obsahuje_material FOREIGN KEY ( material_sklad,
                                                      material )
        REFERENCES material ( sklad_materialu,
                              id_materialu );

ALTER TABLE obsahuje
    ADD CONSTRAINT fk_obsahuje_zakazka FOREIGN KEY ( zakazka )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE pouzita_technika
    ADD CONSTRAINT fk_pouzita_technika_sez_tech FOREIGN KEY ( seznam_techniky,
                                                              sklad_techniky )
        REFERENCES seznam_techniky ( id_seznamu_techniky,
                                     sklad_techniky );

ALTER TABLE pouzita_technika
    ADD CONSTRAINT fk_pouzita_technika_zakazka FOREIGN KEY ( zakazka )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE realizace
    ADD CONSTRAINT fk_realizace_nab_sl FOREIGN KEY ( nabidka_sluzby )
        REFERENCES nabidka_sluzby ( id_nabidky );

ALTER TABLE seznam_techniky
    ADD CONSTRAINT fk_sez_tech_skl_tech FOREIGN KEY ( sklad_techniky )
        REFERENCES sklad_techniky ( id_skladu_techniky );

ALTER TABLE seznam_tymu
    ADD CONSTRAINT fk_seznam_tymu_tym FOREIGN KEY ( tym )
        REFERENCES tym ( id_tymu );

ALTER TABLE seznam_tymu
    ADD CONSTRAINT fk_seznam_tymu_zakazka FOREIGN KEY ( zakazka )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE sidlo
    ADD CONSTRAINT fk_sidlo_adresa FOREIGN KEY ( adresa )
        REFERENCES adresa ( id_adresy );

ALTER TABLE sidlo
    ADD CONSTRAINT fk_sidlo_typ_sidla FOREIGN KEY ( typ_sidla )
        REFERENCES typ_sidla ( id_nazev_typu );

ALTER TABLE sklad_materialu
    ADD CONSTRAINT fk_skl_mat_sidlo FOREIGN KEY ( sidlo )
        REFERENCES sidlo ( id_sidla );

ALTER TABLE sklad_techniky
    ADD CONSTRAINT fk_skl_tech_sidlo FOREIGN KEY ( sidlo )
        REFERENCES sidlo ( id_sidla );

ALTER TABLE udrzba
    ADD CONSTRAINT fk_udrzba_nab_sl FOREIGN KEY ( nabidka_sluzby )
        REFERENCES nabidka_sluzby ( id_nabidky );

ALTER TABLE velkoobchod
    ADD CONSTRAINT fk_vel_obch_adresa FOREIGN KEY ( adresa )
        REFERENCES adresa ( id_adresy );

ALTER TABLE velkoobchod
    ADD CONSTRAINT fk_vel_obch_zakaznik FOREIGN KEY ( id_zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE zakaznik
    ADD CONSTRAINT fk_zakaznik_adresa FOREIGN KEY ( adresa )
        REFERENCES adresa ( id_adresy );

ALTER TABLE zamestnanec
    ADD CONSTRAINT fk_zamest_sidlo FOREIGN KEY ( sidlo )
        REFERENCES sidlo ( id_sidla );

CREATE OR REPLACE TRIGGER arc_zak_isa_velkoobchod BEFORE
    INSERT OR UPDATE OF id_zakaznik ON velkoobchod
    FOR EACH ROW
DECLARE
    d VARCHAR2(8);
BEGIN
    SELECT
        a.zakaznik_type
    INTO d
    FROM
        zakaznik a
    WHERE
        a.id_zakaznik = :new.id_zakaznik;

    IF ( d IS NULL OR d <> 'VEL_OBCH' ) THEN
        raise_application_error(-20223, 'FK FK_VEL_OBCH_ZAKAZNIK in Table VELKOOBCHOD violates Arc constraint on Table ZAKAZNIK - discriminator column ZAKAZNIK_TYPE doesn''t have value ''VEL_OBCH'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_zak_isa_maloobchod BEFORE
    INSERT OR UPDATE OF id_zakaznik ON maloobchod
    FOR EACH ROW
DECLARE
    d VARCHAR2(8);
BEGIN
    SELECT
        a.zakaznik_type
    INTO d
    FROM
        zakaznik a
    WHERE
        a.id_zakaznik = :new.id_zakaznik;

    IF ( d IS NULL OR d <> 'MAL_OBCH' ) THEN
        raise_application_error(-20223, 'FK FK_MAL_OBCH_ZAKAZNIK in Table MALOOBCHOD violates Arc constraint on Table ZAKAZNIK - discriminator column ZAKAZNIK_TYPE doesn''t have value ''MAL_OBCH'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_sluzby_arc_realizace BEFORE
    INSERT OR UPDATE OF nabidka_sluzby ON realizace
    FOR EACH ROW
DECLARE
    d VARCHAR2(100 CHAR);
BEGIN
    SELECT
        a.typ_sluzby
    INTO d
    FROM
        nabidka_sluzby a
    WHERE
        a.id_nabidky = :new.nabidka_sluzby;

    IF ( d IS NULL OR d <> 'REALIZACE' ) THEN
        raise_application_error(-20223, 'FK FK_REALIZACE_NAB_SL in Table REALIZACE violates Arc constraint on Table NABIDKA_SLUZBY - discriminator column TYP_SLUZBY doesn''t have value ''REALIZACE'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_sluzby_arc_udrzba BEFORE
    INSERT OR UPDATE OF nabidka_sluzby ON udrzba
    FOR EACH ROW
DECLARE
    d VARCHAR2(100 CHAR);
BEGIN
    SELECT
        a.typ_sluzby
    INTO d
    FROM
        nabidka_sluzby a
    WHERE
        a.id_nabidky = :new.nabidka_sluzby;

    IF ( d IS NULL OR d <> 'UDRZBA' ) THEN
        raise_application_error(-20223, 'FK FK_UDRZBA_NAB_SL in Table UDRZBA violates Arc constraint on Table NABIDKA_SLUZBY - discriminator column TYP_SLUZBY doesn''t have value ''UDRZBA'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE SEQUENCE adresa_id_adresy_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER adresa_id_adresy_trg BEFORE
    INSERT ON adresa
    FOR EACH ROW
    WHEN ( new.id_adresy IS NULL )
BEGIN
    :new.id_adresy := adresa_id_adresy_seq.nextval;
END;
/

CREATE SEQUENCE material_id_materialu_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER material_id_materialu_trg BEFORE
    INSERT ON material
    FOR EACH ROW
    WHEN ( new.id_materialu IS NULL )
BEGIN
    :new.id_materialu := material_id_materialu_seq.nextval;
END;
/

CREATE SEQUENCE nab_sl_id_nabidky_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER nab_sl_id_nabidky_trg BEFORE
    INSERT ON nabidka_sluzby
    FOR EACH ROW
    WHEN ( new.id_nabidky IS NULL )
BEGIN
    :new.id_nabidky := nab_sl_id_nabidky_seq.nextval;
END;
/

CREATE SEQUENCE sez_tech_id_seznamu_techniky START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sez_tech_id_seznamu_techniky BEFORE
    INSERT ON seznam_techniky
    FOR EACH ROW
    WHEN ( new.id_seznamu_techniky IS NULL )
BEGIN
    :new.id_seznamu_techniky := sez_tech_id_seznamu_techniky.nextval;
END;
/

CREATE SEQUENCE seznam_tymu_id_seznamu_tymu START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER seznam_tymu_id_seznamu_tymu BEFORE
    INSERT ON seznam_tymu
    FOR EACH ROW
    WHEN ( new.id_seznamu_tymu IS NULL )
BEGIN
    :new.id_seznamu_tymu := seznam_tymu_id_seznamu_tymu.nextval;
END;
/

CREATE SEQUENCE sidlo_id_sidla_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sidlo_id_sidla_trg BEFORE
    INSERT ON sidlo
    FOR EACH ROW
    WHEN ( new.id_sidla IS NULL )
BEGIN
    :new.id_sidla := sidlo_id_sidla_seq.nextval;
END;
/

CREATE SEQUENCE skl_mat_id_skladu_materialu START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER skl_mat_id_skladu_materialu BEFORE
    INSERT ON sklad_materialu
    FOR EACH ROW
    WHEN ( new.id_skladu_materialu IS NULL )
BEGIN
    :new.id_skladu_materialu := skl_mat_id_skladu_materialu.nextval;
END;
/

CREATE SEQUENCE skl_tech_id_skladu_techniky START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER skl_tech_id_skladu_techniky BEFORE
    INSERT ON sklad_techniky
    FOR EACH ROW
    WHEN ( new.id_skladu_techniky IS NULL )
BEGIN
    :new.id_skladu_techniky := skl_tech_id_skladu_techniky.nextval;
END;
/

CREATE SEQUENCE tym_id_tymu_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tym_id_tymu_trg BEFORE
    INSERT ON tym
    FOR EACH ROW
    WHEN ( new.id_tymu IS NULL )
BEGIN
    :new.id_tymu := tym_id_tymu_seq.nextval;
END;
/

CREATE SEQUENCE zakazka_id_zakazky_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zakazka_id_zakazky_trg BEFORE
    INSERT ON zakazka
    FOR EACH ROW
    WHEN ( new.id_zakazky IS NULL )
BEGIN
    :new.id_zakazky := zakazka_id_zakazky_seq.nextval;
END;
/

CREATE SEQUENCE zakaznik_id_zakaznik_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zakaznik_id_zakaznik_trg BEFORE
    INSERT ON zakaznik
    FOR EACH ROW
    WHEN ( new.id_zakaznik IS NULL )
BEGIN
    :new.id_zakaznik := zakaznik_id_zakaznik_seq.nextval;
END;
/

CREATE SEQUENCE zamest_id_zamestnanec_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zamest_id_zamestnanec_trg BEFORE
    INSERT ON zamestnanec
    FOR EACH ROW
    WHEN ( new.id_zamestnanec IS NULL )
BEGIN
    :new.id_zamestnanec := zamest_id_zamestnanec_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            22
-- CREATE INDEX                             0
-- ALTER TABLE                             59
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          16
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         12
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
