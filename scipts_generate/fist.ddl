-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2020-06-27 17:50:15 CEST
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE TABLE adresa (
    id_adresy          NUMBER(38) NOT NULL,
    ulice              VARCHAR2(1000) NOT NULL,
    cislo_popisne      NUMBER(38) NOT NULL,
    psc                VARCHAR2(50),
    mesto              VARCHAR2(100) NOT NULL,
    stat               VARCHAR2(100) NOT NULL,
    orientacni_cislo   NUMBER(38)
);

ALTER TABLE adresa ADD CONSTRAINT adresa_pk PRIMARY KEY ( id_adresy );

ALTER TABLE adresa ADD CONSTRAINT adresa_cislo_popisne_psc_un UNIQUE ( cislo_popisne,
                                                                       psc );

CREATE TABLE clen (
    clen_od                      DATE NOT NULL,
    clen_do                      DATE,
    zamestnanec_id_zamestnanec   NUMBER(38) NOT NULL,
    tym_id_tymu                  NUMBER NOT NULL
);

ALTER TABLE clen
    ADD CONSTRAINT clen_pk PRIMARY KEY ( zamestnanec_id_zamestnanec,
                                         clen_od,
                                         tym_id_tymu );

CREATE TABLE maloobchod (
    id_zakaznik   NUMBER NOT NULL,
    vek           NUMBER,
    pohlavi       VARCHAR2(10),
    prijmeni      VARCHAR2(100),
    titul         VARCHAR2(30)
);

ALTER TABLE maloobchod ADD CONSTRAINT maloobchod_pk PRIMARY KEY ( id_zakaznik );

CREATE TABLE material (
    datum_pouziti                         DATE NOT NULL,
    zakazka_id_zakazky                    NUMBER NOT NULL,
    mnozstvi                              NUMBER NOT NULL,
    popis                                 VARCHAR2(500),
    sklad_materialu_id_skladu_materialu   NUMBER(38) NOT NULL,
    id_materialu                          NUMBER NOT NULL,
    jmeno_materialu                       VARCHAR2(300) NOT NULL,
    skladem                               NUMBER NOT NULL,
    cena                                  NUMBER,
    porizovaci_cena                       NUMBER NOT NULL
);

ALTER TABLE material
    ADD CONSTRAINT material_pk PRIMARY KEY ( zakazka_id_zakazky,
                                             sklad_materialu_id_skladu_materialu,
                                             id_materialu );

ALTER TABLE material ADD CONSTRAINT material_jmeno_materialu_un UNIQUE ( jmeno_materialu );

CREATE TABLE nabidka_sluzby (
    id_nabidky                 NUMBER NOT NULL,
    typ_sluzby_id_typ_sluzby   VARCHAR2(100) NOT NULL,
    datum_do                   DATE NOT NULL,
    datum_od                   DATE NOT NULL,
    zakazka_id_zakazky         NUMBER NOT NULL
);

ALTER TABLE nabidka_sluzby ADD CONSTRAINT nabidka_sluzby_pk PRIMARY KEY ( id_nabidky );

CREATE TABLE objednavka (
    zakazka_id_zakazky     NUMBER NOT NULL,
    zakaznik_id_zakaznik   NUMBER NOT NULL,
    datum_prijeti          DATE NOT NULL,
    datum_vyrizeni         DATE NOT NULL
);

ALTER TABLE objednavka ADD CONSTRAINT objednavka_pk PRIMARY KEY ( zakaznik_id_zakaznik,
                                                                  zakazka_id_zakazky );

CREATE TABLE realizace (
    nabidka_sluzby_id_nabidky   NUMBER NOT NULL,
    plocha                      VARCHAR2(100) NOT NULL,
    naceneni                    NUMBER NOT NULL,
    cas                         DATE
);

ALTER TABLE realizace ADD CONSTRAINT realizace_pk PRIMARY KEY ( nabidka_sluzby_id_nabidky );

CREATE TABLE seznam_techniky (
    id_seznamu_techniky                 NUMBER NOT NULL,
    datum_od                            DATE NOT NULL,
    datum_do                            DATE NOT NULL,
    zakazka_id_zakazky                  NUMBER NOT NULL,
    poznamka                            VARCHAR2(4000),
    sklad_techniky_id_skladu_techniky   NUMBER NOT NULL
);

ALTER TABLE seznam_techniky
    ADD CONSTRAINT seznam_techniky_pk PRIMARY KEY ( id_seznamu_techniky,
                                                    zakazka_id_zakazky,
                                                    sklad_techniky_id_skladu_techniky );

CREATE TABLE seznam_tymu (
    id_seznamu_tymu      NUMBER NOT NULL,
    datum_od             DATE NOT NULL,
    datum_do             DATE NOT NULL,
    tym_id_tymu          NUMBER NOT NULL,
    zakazka_id_zakazky   NUMBER NOT NULL
);

ALTER TABLE seznam_tymu
    ADD CONSTRAINT seznam_tymu_pk PRIMARY KEY ( id_seznamu_tymu,
                                                tym_id_tymu,
                                                zakazka_id_zakazky );

CREATE TABLE sidlo (
    id_sidla                  NUMBER(38, 2) NOT NULL,
    jmeno                     VARCHAR2(100) NOT NULL,
    adresa_id_adresy          NUMBER(38) NOT NULL,
    plocha                    NUMBER,
    typ_sidla_id_nazev_typu   VARCHAR2(50) NOT NULL
);

CREATE UNIQUE INDEX sidlo__idx ON
    sidlo (
        typ_sidla_id_nazev_typu
    ASC );

ALTER TABLE sidlo ADD CONSTRAINT sidlo_pk PRIMARY KEY ( id_sidla );

ALTER TABLE sidlo ADD CONSTRAINT sidlo_jmeno_un UNIQUE ( jmeno );

CREATE TABLE sklad_materialu (
    id_skladu_materialu   NUMBER(38) NOT NULL,
    nazev_skladu          VARCHAR2(500) NOT NULL,
    cena                  NUMBER(38, 2) NOT NULL,
    popis                 VARCHAR2(4000),
    skladem               VARCHAR2(10) NOT NULL,
    sidlo_id_sidla        NUMBER(38, 2)
);

ALTER TABLE sklad_materialu ADD CONSTRAINT sklad_materialu_pk PRIMARY KEY ( id_skladu_materialu );

ALTER TABLE sklad_materialu ADD CONSTRAINT sklad_materialu_nazev_skladu_un UNIQUE ( nazev_skladu );

CREATE TABLE sklad_techniky (
    id_skladu_techniky      NUMBER NOT NULL,
    nazev_skladu_techniky   VARCHAR2(500) NOT NULL,
    popis                   VARCHAR2(4000),
    porizovaci_cena         NUMBER(38, 2) NOT NULL,
    sidlo_id_sidla          NUMBER(38, 2)
);

ALTER TABLE sklad_techniky ADD CONSTRAINT sklad_techniky_pk PRIMARY KEY ( id_skladu_techniky );

ALTER TABLE sklad_techniky ADD CONSTRAINT sklad_techniky_nazev_skladu_techniky_un UNIQUE ( nazev_skladu_techniky );

CREATE TABLE tym (
    id_tymu   NUMBER NOT NULL,
    nazev     VARCHAR2(100) NOT NULL,
    popis     VARCHAR2(4000)
);

ALTER TABLE tym ADD CONSTRAINT tym_pk PRIMARY KEY ( id_tymu );

ALTER TABLE tym ADD CONSTRAINT tym_nazev_un UNIQUE ( nazev );

CREATE TABLE typ_sidla (
    id_nazev_typu   VARCHAR2(50) NOT NULL,
    popis           VARCHAR2(1000)
);

ALTER TABLE typ_sidla ADD CONSTRAINT typ_sidla_pk PRIMARY KEY ( id_nazev_typu );

CREATE TABLE typ_sluzby (
    id_typ_sluzby   VARCHAR2(100) NOT NULL,
    popis           VARCHAR2(500) NOT NULL
);

ALTER TABLE typ_sluzby ADD CONSTRAINT typ_sluzby_pk PRIMARY KEY ( id_typ_sluzby );

ALTER TABLE typ_sluzby ADD CONSTRAINT typ_sluzby_nazev_un UNIQUE ( popis );

CREATE TABLE udrzba (
    nabidka_sluzby_id_nabidky   NUMBER NOT NULL,
    cas                         DATE NOT NULL,
    naceneni                    NUMBER(38, 2) NOT NULL
);

ALTER TABLE udrzba ADD CONSTRAINT udrzba_pk PRIMARY KEY ( nabidka_sluzby_id_nabidky );

CREATE TABLE velkoobchod (
    id_zakaznik        NUMBER NOT NULL,
    ico                VARCHAR2(10) NOT NULL,
    dic                VARCHAR2(15),
    adresa_id_adresy   NUMBER(38) NOT NULL
);

ALTER TABLE velkoobchod ADD CONSTRAINT velkoobchod_pk PRIMARY KEY ( id_zakaznik );

ALTER TABLE velkoobchod ADD CONSTRAINT velkoobchod_pkv1 UNIQUE ( ico );

ALTER TABLE velkoobchod ADD CONSTRAINT velkoobchod_dic_un UNIQUE ( dic );

CREATE TABLE zakazka (
    id_zakazky     NUMBER NOT NULL,
    celkova_cena   NUMBER(38, 2) NOT NULL,
    poznamky       VARCHAR2(500)
);

ALTER TABLE zakazka ADD CONSTRAINT zakazka_pk PRIMARY KEY ( id_zakazky );

CREATE TABLE zakaznik (
    id_zakaznik        NUMBER NOT NULL,
    telefon            VARCHAR2(100) NOT NULL,
    adresa_id_adresy   NUMBER(38),
    jmeno              VARCHAR2(100) NOT NULL,
    email              VARCHAR2(400) NOT NULL,
    zakaznik_type      VARCHAR2(11) NOT NULL
);

ALTER TABLE zakaznik
    ADD CONSTRAINT ch_inh_zakaznik CHECK ( zakaznik_type IN (
        'MALOOBCHOD',
        'VELKOOBCHOD'
    ) );

ALTER TABLE zakaznik ADD CONSTRAINT zakaznik_pk PRIMARY KEY ( id_zakaznik );

ALTER TABLE zakaznik ADD CONSTRAINT zakaznik_telefon_un UNIQUE ( telefon );

CREATE TABLE zamestnanec (
    id_zamestnanec   NUMBER(38) NOT NULL,
    osobni_cislo     VARCHAR2(10) NOT NULL,
    jmeno            VARCHAR2(100) NOT NULL,
    sidlo_id_sidla   NUMBER(38, 2) NOT NULL
);

ALTER TABLE zamestnanec ADD CONSTRAINT zamestnanec_pk PRIMARY KEY ( id_zamestnanec );

ALTER TABLE zamestnanec ADD CONSTRAINT zamestnanec_osobni_cislo_un UNIQUE ( osobni_cislo );

ALTER TABLE clen
    ADD CONSTRAINT clen_tym_fk FOREIGN KEY ( tym_id_tymu )
        REFERENCES tym ( id_tymu );

ALTER TABLE clen
    ADD CONSTRAINT clen_zamestnanec_fk FOREIGN KEY ( zamestnanec_id_zamestnanec )
        REFERENCES zamestnanec ( id_zamestnanec );

ALTER TABLE maloobchod
    ADD CONSTRAINT maloobchod_zakaznik_fk FOREIGN KEY ( id_zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE material
    ADD CONSTRAINT material_sklad_materialu_fk FOREIGN KEY ( sklad_materialu_id_skladu_materialu )
        REFERENCES sklad_materialu ( id_skladu_materialu );

ALTER TABLE material
    ADD CONSTRAINT material_zakazka_fk FOREIGN KEY ( zakazka_id_zakazky )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE nabidka_sluzby
    ADD CONSTRAINT nabidka_sluzby_typ_sluzby_fk FOREIGN KEY ( typ_sluzby_id_typ_sluzby )
        REFERENCES typ_sluzby ( id_typ_sluzby );

ALTER TABLE nabidka_sluzby
    ADD CONSTRAINT nabidka_sluzby_zakazka_fk FOREIGN KEY ( zakazka_id_zakazky )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE objednavka
    ADD CONSTRAINT objednavka_zakazka_fk FOREIGN KEY ( zakazka_id_zakazky )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE objednavka
    ADD CONSTRAINT objednavka_zakaznik_fk FOREIGN KEY ( zakaznik_id_zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE realizace
    ADD CONSTRAINT realizace_nabidka_sluzby_fk FOREIGN KEY ( nabidka_sluzby_id_nabidky )
        REFERENCES nabidka_sluzby ( id_nabidky );

ALTER TABLE seznam_techniky
    ADD CONSTRAINT seznam_techniky_sklad_techniky_fk FOREIGN KEY ( sklad_techniky_id_skladu_techniky )
        REFERENCES sklad_techniky ( id_skladu_techniky );

ALTER TABLE seznam_techniky
    ADD CONSTRAINT seznam_techniky_zakazka_fk FOREIGN KEY ( zakazka_id_zakazky )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE seznam_tymu
    ADD CONSTRAINT seznam_tymu_tym_fk FOREIGN KEY ( tym_id_tymu )
        REFERENCES tym ( id_tymu );

ALTER TABLE seznam_tymu
    ADD CONSTRAINT seznam_tymu_zakazka_fk FOREIGN KEY ( zakazka_id_zakazky )
        REFERENCES zakazka ( id_zakazky );

ALTER TABLE sidlo
    ADD CONSTRAINT sidlo_adresa_fk FOREIGN KEY ( adresa_id_adresy )
        REFERENCES adresa ( id_adresy );

ALTER TABLE sidlo
    ADD CONSTRAINT sidlo_typ_sidla_fk FOREIGN KEY ( typ_sidla_id_nazev_typu )
        REFERENCES typ_sidla ( id_nazev_typu );

ALTER TABLE sklad_materialu
    ADD CONSTRAINT sklad_materialu_sidlo_fk FOREIGN KEY ( sidlo_id_sidla )
        REFERENCES sidlo ( id_sidla );

ALTER TABLE sklad_techniky
    ADD CONSTRAINT sklad_techniky_sidlo_fk FOREIGN KEY ( sidlo_id_sidla )
        REFERENCES sidlo ( id_sidla );

ALTER TABLE udrzba
    ADD CONSTRAINT udrzba_nabidka_sluzby_fk FOREIGN KEY ( nabidka_sluzby_id_nabidky )
        REFERENCES nabidka_sluzby ( id_nabidky );

ALTER TABLE velkoobchod
    ADD CONSTRAINT velkoobchod_adresa_fk FOREIGN KEY ( adresa_id_adresy )
        REFERENCES adresa ( id_adresy );

ALTER TABLE velkoobchod
    ADD CONSTRAINT velkoobchod_zakaznik_fk FOREIGN KEY ( id_zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE zakaznik
    ADD CONSTRAINT zakaznik_adresa_fk FOREIGN KEY ( adresa_id_adresy )
        REFERENCES adresa ( id_adresy );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_sidlo_fk FOREIGN KEY ( sidlo_id_sidla )
        REFERENCES sidlo ( id_sidla );

CREATE OR REPLACE TRIGGER arc_fkarc_1_velkoobchod BEFORE
    INSERT OR UPDATE OF id_zakaznik ON velkoobchod
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.zakaznik_type
    INTO d
    FROM
        zakaznik a
    WHERE
        a.id_zakaznik = :new.id_zakaznik;

    IF ( d IS NULL OR d <> 'VELKOOBCHOD' ) THEN
        raise_application_error(-20223, 'FK VELKOOBCHOD_ZAKAZNIK_FK in Table VELKOOBCHOD violates Arc constraint on Table ZAKAZNIK - discriminator column ZAKAZNIK_TYPE doesn''t have value ''VELKOOBCHOD'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_maloobchod BEFORE
    INSERT OR UPDATE OF id_zakaznik ON maloobchod
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.zakaznik_type
    INTO d
    FROM
        zakaznik a
    WHERE
        a.id_zakaznik = :new.id_zakaznik;

    IF ( d IS NULL OR d <> 'MALOOBCHOD' ) THEN
        raise_application_error(-20223, 'FK MALOOBCHOD_ZAKAZNIK_FK in Table MALOOBCHOD violates Arc constraint on Table ZAKAZNIK - discriminator column ZAKAZNIK_TYPE doesn''t have value ''MALOOBCHOD'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arc_2_realizace BEFORE
    INSERT OR UPDATE OF nabidka_sluzby_id_nabidky ON realizace
    FOR EACH ROW
DECLARE
    d VARCHAR2(100);
BEGIN
    SELECT
        a.typ_sluzby_id_typ_sluzby
    INTO d
    FROM
        nabidka_sluzby a
    WHERE
        a.id_nabidky = :new.nabidka_sluzby_id_nabidky;

    IF ( d IS NULL OR d <> 'REALIZACE' ) THEN
        raise_application_error(-20223, 'FK REALIZACE_NABIDKA_SLUZBY_FK in Table REALIZACE violates Arc constraint on Table NABIDKA_SLUZBY - discriminator column TYP_SLUZBY_id_typ_sluzby doesn''t have value ''REALIZACE'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arc_2_udrzba BEFORE
    INSERT OR UPDATE OF nabidka_sluzby_id_nabidky ON udrzba
    FOR EACH ROW
DECLARE
    d VARCHAR2(100);
BEGIN
    SELECT
        a.typ_sluzby_id_typ_sluzby
    INTO d
    FROM
        nabidka_sluzby a
    WHERE
        a.id_nabidky = :new.nabidka_sluzby_id_nabidky;

    IF ( d IS NULL OR d <> 'UDRZBA' ) THEN
        raise_application_error(-20223, 'FK UDRZBA_NABIDKA_SLUZBY_FK in Table UDRZBA violates Arc constraint on Table NABIDKA_SLUZBY - discriminator column TYP_SLUZBY_id_typ_sluzby doesn''t have value ''UDRZBA'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            20
-- CREATE INDEX                             1
-- ALTER TABLE                             55
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
